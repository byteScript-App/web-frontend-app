@use "sass:map";
@use "../maps" as *;
@use "sass:list" as *;
@use "../mixins/supportedScreens" as *;

@mixin typography($type) {
  @if not index($allowed-typography-types, $type) {
    @error "Invalid type '#{$type}' in @include typography(). Only known types are allowed: #{join($allowed-typography-types, '')}";
  }

  // Apply default styles
  $default-style: map.get(map.get($typography, default), $type);

  @each $key, $value in $default-style {
    #{$key}: $value;
  }

  // Apply responsive typography properties
  @each $bp in (extraSmallScreen, smallScreen, mediumScreen, normalScreen, largeScreen, extraLargeScreen) {
    $breakpoint-styles: map.get(map.get($typography, $bp), $type);

    @if $breakpoint-styles {
      @if $bp == extraSmallScreen {
        @include extraSmallScreen {
          @each $key, $value in $breakpoint-styles {
            #{$key}: $value;
          }
        }
      } @else if $bp == smallScreen {
        @include smallScreen {
          @each $key, $value in $breakpoint-styles {
            #{$key}: $value;
          }
        }
      } @else if $bp == mediumScreen {
        @include mediumScreen {
          @each $key, $value in $breakpoint-styles {
            #{$key}: $value;
          }
        }
      } @else if $bp == normalScreen {
        @include normalScreen {
          @each $key, $value in $breakpoint-styles {
            #{$key}: $value;
          }
        }
      } @else if $bp == largeScreen {
        @include largeScreen {
          @each $key, $value in $breakpoint-styles {
            #{$key}: $value;
          }
        }
      } @else if $bp == extraLargeScreen {
        @include extraLargeScreen {
          @each $key, $value in $breakpoint-styles {
            #{$key}: $value;
          }
        }
      }
    }
  }
}